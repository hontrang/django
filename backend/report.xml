<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="pytest" skips="0" tests="1" time="1.193"><testcase classname="webapp.tests.HttpServiceTestCase" file="webapp\tests.py" line="186" name="test_add_item_to_cart_list" time="0.22501277923583984"><failure message="TypeError: __init__() missing 1 required positional argument: &apos;serializer&apos;">self = &lt;webapp.tests.HttpServiceTestCase testMethod=test_add_item_to_cart_list&gt;

    def test_add_item_to_cart_list(self):
        &quot;&quot;&quot;
            ability to add product object to user means items ready to pay
            &quot;&quot;&quot;
        responsep0 = self.client.get(
            &apos;http://localhost:8000/webapp/api/products/&apos;)
        self.assertEqual(responsep0.status_code, 200)
        product0 = responsep0.data[&apos;results&apos;][0]
        product1 = responsep0.data[&apos;results&apos;][1]
        product2 = responsep0.data[&apos;results&apos;][2]
        responseu0 = self.client.get(
&gt;           &apos;http://localhost:8000/webapp/api/users/5970b1db96279ab6ccf3deea/&apos;)

webapp\tests.py:198: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\test.py:282: in get
    response = super(APIClient, self).get(path, data=data, **extra)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\test.py:208: in get
    return self.generic(&apos;GET&apos;, path, **r)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\django\test\client.py:416: in generic
    return self.request(**r)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\test.py:279: in request
    return super(APIClient, self).request(**kwargs)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\test.py:231: in request
    request = super(APIRequestFactory, self).request(**kwargs)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\django\test\client.py:501: in request
    six.reraise(*exc_info)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\django\utils\six.py:686: in reraise
    raise value
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\django\core\handlers\exception.py:41: in inner
    response = get_response(request)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\django\core\handlers\base.py:187: in _get_response
    response = self.process_exception_by_middleware(e, request)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\django\core\handlers\base.py:185: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\django\views\decorators\csrf.py:58: in wrapped_view
    return view_func(*args, **kwargs)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\viewsets.py:86: in view
    return self.dispatch(request, *args, **kwargs)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\views.py:489: in dispatch
    response = self.handle_exception(exc)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\views.py:449: in handle_exception
    self.raise_uncaught_exception(exc)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\views.py:486: in dispatch
    response = handler(request, *args, **kwargs)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\mixins.py:58: in retrieve
    return Response(serializer.data)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\serializers.py:534: in data
    ret = super(Serializer, self).data
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\serializers.py:263: in data
    self._data = self.to_representation(self.instance)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\serializers.py:484: in to_representation
    fields = self._readable_fields
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\django\utils\functional.py:35: in __get__
    res = instance.__dict__[self.name] = self.func(instance)
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\serializers.py:378: in _readable_fields
    field for field in self.fields.values()
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework\serializers.py:364: in fields
    for key, value in self.get_fields().items():
c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework_mongoengine\serializers.py:324: in get_fields
    field_name, self.field_info, model, depth, depth_embedding
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = UserSerializer(&lt;webapp.models.Users: user5416&gt;, context={&apos;request&apos;: &lt;rest_framework.request.Request object at 0x04EC55D0&gt;, &apos;format&apos;: None, &apos;view&apos;: &lt;webapp.views.UserViewSet object at 0x04EC5DD0&gt;}):
pass
field_name = &apos;returnItems&apos;
info = FieldResult(pk=&lt;mongoengine.base.fields.ObjectIdField object at 0x049C1390&gt;, fields=OrderedDict([(&apos;name&apos;, &lt;mongoengine...eld=&lt;mongoengine.fields.EmbeddedDocumentField object at 0x049DAFD0&gt;, related_model=&lt;class &apos;webapp.models.Payment&apos;&gt;))]))
model_class = &lt;class &apos;webapp.models.Users&apos;&gt;, nested_depth = 0
embedded_depth = 5

    def build_field(self, field_name, info, model_class, nested_depth, embedded_depth):
        if field_name in info.fields_and_pk:
            model_field = info.fields_and_pk[field_name]
            if isinstance(model_field, COMPOUND_FIELD_TYPES):
                child_name = field_name + &apos;.child&apos;
                if child_name in info.fields or child_name in info.embedded or child_name in info.references:
                    child_class, child_kwargs = self.build_field(child_name, info, model_class, nested_depth, embedded_depth)
&gt;                   child_field = child_class(**child_kwargs)
E                   TypeError: __init__() missing 1 required positional argument: &apos;serializer&apos;

c:\users\abc\appdata\local\programs\python\python36-32\lib\site-packages\rest_framework_mongoengine\serializers.py:361: TypeError</failure></testcase></testsuite>